import express from "express";
import { handlerNumRequests, handlerReadiness, handlersError, handlerValidateChirp } from "./handlers.js";
import { middlewareLogResponses, middlewareMetricsInc } from "./middleware.js";
import postgres from "postgres";
import { migrate } from "drizzle-orm/postgres-js/migrator";
import { drizzle } from "drizzle-orm/postgres-js";
import { config } from "./config.js";
import { handlersCreateUser, handlersDeleteUsers } from "./handlers-users.js";
const migrationClient = postgres(config.dbConfig.dbConnectionString, { max: 1 });
await migrate(drizzle(migrationClient), config.dbConfig.migrationsConfig);
const app = express();
const PORT = 8081;
app.use("/app", middlewareMetricsInc);
app.use("/app", express.static("./src/app"));
app.use(express.json());
app.use(middlewareLogResponses);
app.get("/api/healthz", handlerReadiness);
app.post("/api/validate_chirp", handlerValidateChirp);
app.post("/api/users", handlersCreateUser);
app.post("/admin/reset", handlersDeleteUsers);
app.get("/admin/metrics", handlerNumRequests);
app.use(handlersError);
const server = app.listen(PORT, () => {
    console.log(`server listening on port ${PORT}`);
});
